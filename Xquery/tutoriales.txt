Escribe las consultas XQuery que permitan obtener la siguiente información:
1. cada uno de los nombres de las categorias con la etiqueta "categoria".

for $categoria in doc("tutoriales.xml")//categoria
return data($categoria)

2. los titulos de los tutoriales con el número de visitas entre paréntesis, ambos dentro de la misma etiqueta "lostutoriales".

<lostutoriales>
{
  for $tutorial in doc("tutoriales.xml")//tutorial
  return <tutorial>{data($tutorial/titulo)} ({data($tutorial/visitas)})</tutorial>
}
</lostutoriales>


3. los nombres de los tutoriales con menos de 2000 visitas

for $tutorial in doc("tutoriales.xml")//tutorial[visitas < 2000]
return data($tutorial/titulo)

4. los nombres de los tutoriales de XML con más de 30.000 visitas

for $tutorial in doc("tutoriales.xml")//tutorial[categoria = "XML" and visitas > 30000]
return data($tutorial/titulo)

5. el número total de visitas

sum(doc("tutoriales.xml")//visitas)

6. los nombres de las categorías distintas, cada una en una etiqueta <categoriadistintas>
<distinctcategorias>
{
  for $categoria in distinct-values(doc("tutoriales.xml")//categoria)
  return <categoriadistintas>{data($categoria)}</categoriadistintas>
}
</distinctcategorias>


7. nombres y apellidos de los autores eliminando los repetidos y acompañar cada nombre con todos sus tutoriales, ordenados alfabeticametne por nombre de autor; cada autor en una etiqueta <autor> que contendrá una etiqueta <nombreyapellidos> y una etiqueta <titulo>.

<autores>
{
  for $autor in distinct-values(doc("tutoriales.xml")//autor/nombre)
  let $tutoriales := doc("tutoriales.xml")//tutorial[autor/nombre = $autor]
  return
    <autor>
      <nombreyapellidos>{data($tutoriales/autor[nombre = $autor]/concat(nombre, ' ', apellidos))}</nombreyapellidos>
      {
        for $tutorial in $tutoriales
        return <titulo>{data($tutorial/titulo)}</titulo>
      }
    </autor>
}
</autores>

8. la media de vistas de los tutoriales, dentro de una etiqueta <media>.

<media>
{
  let $numTutoriales := count(doc("tutoriales.xml")//tutorial)
  let $totalVisitas := sum(doc("tutoriales.xml")//visitas)
  return $totalVisitas div $numTutoriales
}
</media>

9. cuantos tutoriales de XML hay, dentro de una etiqueta <totaltutoriales>.

<totaltutoriales>
{
  count(doc("tutoriales.xml")//tutorial[categoria = "XML"])
}
</totaltutoriales>

10. el nombre del tutorial y su categoría, ordenado por el nombre de cada categoría

{
  for $categoria in distinct-values(doc("tutoriales.xml")//categoria)
  let $tutoriales := doc("tutoriales.xml")//tutorial[categoria = $categoria]
  return
    <categoria>
      {data($categoria)}
      {
        for $tutorial in $tutoriales
        return <tutorial>{data($tutorial/titulo)}</tutorial>
      }
    </categoria>
}

11. todos los datos de cada tutorial excepto las visitas.

{
  for $tutorial in doc("tutoriales.xml")//tutorial
  return
    <tutorial>
      {($tutorial/*[local-name() ne "visitas"])}
    </tutorial>
}

12. En una tabla de HTML de dos columnas, el título de los tutoriales y los nombres de los autores.

<table>
  <tr>
    <th>Título del Tutorial</th>
    <th>Nombre del Autor</th>
  </tr>
  {
    for $tutorial in doc("tutoriales.xml")//tutorial
    return
      <tr>
        <td>{data($tutorial/titulo)}</td>
        <td>{data($tutorial/autor/nombre)} {data($tutorial/autor/apellidos)}</td>
      </tr>
  }
</table>
